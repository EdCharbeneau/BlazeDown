@page "/"
@inject HttpClient Http

<NavBar>
    <div class="navbar-form navbar-left">
        <div class="form-group">
            <input id="filename" bind="@FileUrl" type="text" class="form-control" placeholder="http://example.com/myfile.md" />
        </div>
        <button onclick="@OnClicked" class="btn btn-primary">Import from URL</button>
    </div>
    <div class="navbar-form navbar-right">
        <DownloadButton Payload="@ContentValue" FileName="BlazeDown.md">Download as MD</DownloadButton>
    </div>
</NavBar>
<div class="container-fluid">
    <div class="row">
        <div class="alert alert-warning" role="alert">
            <p>Navigate away from the editor (left) to update the preview (right)</p>
        </div>
        <div class="row">
            <div class="col-sm-6">
                <span class="label label-default label-hint">Editor</span>
                <div class="markdown-editor">
                    <textarea bind="@ContentValue" />
                </div>
            </div>
            <div class="col-sm-6">
                <span class="label label-default label-hint">HTML Preview</span>
                <div class="markdown-view">
                    <Markdown Content="@ContentValue"></Markdown>
                </div>
            </div>
        </div>
    </div>
</div>
@functions {

    public string FileUrl { get; set; }
    public string ContentValue { get; set; }

    protected async override Task OnInitAsync()
    {
        ContentValue = await GetContentFromUrl("/sample-data/example.md");
        StateHasChanged();
    }

    private async void OnClicked(UIMouseEventArgs e)
    {
        ContentValue = await GetContentFromUrl(FileUrl);
        StateHasChanged();
    }

    private async Task<string> GetContentFromUrl(string path)
    {
        HttpResponseMessage httpResponse = await Http.GetAsync(path);
        return httpResponse.IsSuccessStatusCode ?
        await httpResponse.Content.ReadAsStringAsync() : httpResponse.ReasonPhrase;
    }

    // using bind-Property causes Blazor language services to crash.
    // Two-way data-binding doesn't seem to work, so I had to manually update ContentValue
    // https://github.com/aspnet/Blazor/issues/610
    void OnContentChanged(string newValue)
    {
        ContentValue = newValue;
        StateHasChanged();
    }

    // ContentChanged textarea should bind to onkeyup instead of onchange, however this is not supported yet.
    // As a result, the user needs to change the focus away from the textarea to invoke a change.
    // Interops could probably be used as a fix, but this is an experiment to use Blazor as much as possible without them.
    // Opinion: If I have to use interops this much, I might as well use JavaScript. We're at version 0.2.0, so no worries, this is just an observation.

}
